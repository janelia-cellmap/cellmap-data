# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

# https://peps.python.org/pep-0621/
[project]
name = "cellmap-data"
description = "Utility for loading CellMap data for machine learning training, utilizing PyTorch, Xarray, TensorStore, and PyDantic."
readme = "README.md"
requires-python = ">=3.11"
license = { text = "BSD 3-Clause License" }
authors = [
    { email = "rhoadesj@hhmi.org", name = "Jeff Rhoades" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
    "torch",
    "torchvision",
    "numpy",
    "matplotlib",
    "pydantic_ome_ngff",
    "xarray_ome_ngff",
    "tensorstore",
    # "xarray=2024.10.0",
    "xarray-tensorstore>=0.1.5",
    "universal_pathlib>=0.2.0",
    "fsspec[s3,http]",
    "cellpose",
    "neuroglancer",
    "h5py", # Only needed until the new cellmap-flow is released
    # "cellmap-flow",
    "ipython",
    # "py_distance_transforms",
]

# extras
# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
test = ["pytest>=6.0", "pytest-cov", "mypy", "black"]
dev = [
    "black",
    "ipython",
    "jupyter",
    "mypy",
    "pdbpp",
    "pre-commit",
    "pytest-cov",
    "pytest>=6.0",
    "rich",
    "ruff",
    "snakeviz",
    "sphinx",
    "sphinx-book-theme",
    "twine",
    "hatch",
    "python-semantic-release",
]
all = [
    "cellmap-data[dev,test]",
]

[project.urls]
homepage = "https://github.com/janelia-cellmap/cellmap-data"
repository = "https://github.com/janelia-cellmap/cellmap-data"

# same as console_scripts entry point
# [project.scripts]
# spam-cli = "spam:main_cli"

# Entry points
# https://peps.python.org/pep-0621/#entry-points
# [project.entry-points."spam.magical"]
# tomatoes = "spam:main_tomatoes"

# [tool.hatch.metadata]
# allow-direct-references = true
# dynamic = ["version"]

# https://hatch.pypa.io/latest/config/metadata/
[tool.hatch.version]
source = "vcs"

# https://hatch.pypa.io/latest/config/build/#file-selection
[tool.hatch.build.targets.sdist]
# include = ["/src", "/tests"]
exclude = [
  "/.github",
  "/docs",
  "/tests",
]

[tool.hatch.build.targets.wheel]
# only-include = ["src"]
# sources = ["src"]
package = "src/cellmap_data"

# https://github.com/charliermarsh/ruff
[tool.ruff]
line-length = 88
target-version = "py38"
src = ["src"]
# https://beta.ruff.rs/docs/rules/
lint.select = [
    "E",    # style errors
    "W",    # style warnings
    "F",    # flakes
    "D",    # pydocstyle
    "I",    # isort
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
]
# I do this to get numpy-style docstrings AND retain
# D417 (Missing argument descriptions in the docstring)
# otherwise, see:
# https://beta.ruff.rs/docs/faq/#does-ruff-support-numpy-or-google-style-docstrings
# https://github.com/charliermarsh/ruff/issues/2606
lint.ignore = [
    "D100", # Missing docstring in public module
    "D107", # Missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line
    "D401", # First line should be in imperative mood
    "D413", # Missing blank line after last section
    "D416", # Section name should end with a colon
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D", "S"]

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
filterwarnings = ["error", "ignore::DeprecationWarning", "ignore::FutureWarning"]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/cellmap_data"
# strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true
ignore_missing_imports = true
allow_redefinition = true
implicit_optional = true
ignore_errors = true # TODO: remove this

# # module specific overrides
# [[tool.mypy.overrides]]
# module = ["numpy.*",]
# ignore_errors = true


# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "\\.\\.\\.",
    "raise NotImplementedError()",
]
[tool.coverage.run]
source = ["cellmap_data"]

# https://github.com/mgedmin/check-manifest#configuration
[tool.check-manifest]
ignore = [
    ".github_changelog_generator",
    ".pre-commit-config.yaml",
    ".ruff_cache/**/*",
    "tests/**/*",
]

# # for things that require compilation
# # https://cibuildwheel.readthedocs.io/en/stable/options/
# [tool.cibuildwheel]
# # Skip 32-bit builds & PyPy wheels on all platforms
# skip = ["*-manylinux_i686", "*-musllinux_i686", "*-win32", "pp*"]
# test-extras = ["test"]
# test-command = "pytest {project}/tests -v"
# test-skip = "*-musllinux*"

# [tool.cibuildwheel.environment]
# HATCH_BUILD_HOOKS_ENABLE = "1"
